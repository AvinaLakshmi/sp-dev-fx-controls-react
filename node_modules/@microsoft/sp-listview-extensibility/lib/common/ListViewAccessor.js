"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var sp_core_library_1 = require("@microsoft/sp-core-library");
var ListItemAccessor_1 = require("./ListItemAccessor");
var ColumnAccessor = (function () {
    function ColumnAccessor() {
    }
    return ColumnAccessor;
}());
exports.ColumnAccessor = ColumnAccessor;
var RowAccessor = (function (_super) {
    __extends(RowAccessor, _super);
    function RowAccessor() {
        return _super.call(this) || this;
    }
    return RowAccessor;
}(ListItemAccessor_1.default));
exports.RowAccessor = RowAccessor;
var SelectedRowsChangedEventArgs = (function (_super) {
    __extends(SelectedRowsChangedEventArgs, _super);
    function SelectedRowsChangedEventArgs() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    return SelectedRowsChangedEventArgs;
}(sp_core_library_1.EventArgs));
exports.SelectedRowsChangedEventArgs = SelectedRowsChangedEventArgs;
var ListViewAccessor = (function () {
    function ListViewAccessor() {
        this._selectedRowsChangedEvent =
            new sp_core_library_1.Event(ListViewAccessor._selectedRowsChangedEventName);
    }
    Object.defineProperty(ListViewAccessor.prototype, "selectedRowsChangedEvent", {
        get: function () {
            return this._selectedRowsChangedEvent;
        },
        enumerable: true,
        configurable: true
    });
    ListViewAccessor._selectedRowsChangedEventName = 'listView.selectedRowsChanged';
    return ListViewAccessor;
}());
exports.default = ListViewAccessor;
